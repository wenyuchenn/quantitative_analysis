import math
Cfre = [12, 6, 4, 3, 2.4, 2, 1.71, 1.5, 1.333]

class TermStructure(object):

    def __init__(self):
        self.bonds = []
        self.spot_rates = []
        self.forward_1m_rates = []
        self.discount_factors = []
        self.forward_3m_rates = []
        self.forward_6m_rates = []
        for _ in range(9):
            self.spot_rates.append(0.0)
            self.forward_1m_rates.append(0.0)
            self.forward_3m_rates.append(0.0)
            self.forward_6m_rates.append(0.0)
            self.discount_factors.append(0.0)

    def set_bonds(self, bonds):
        self.bonds = bonds

    def get_spot_rate(self, index):
        return self.spot_rates[index]

    def get_forward_1m_rate(self, index):
        return self.forward_1m_rates[index]
    
    def get_forward_3m_rate(self, index):
        return self.forward_3m_rates[index]
    
    def get_forward_6m_rate(self, index):
        return self.forward_6m_rates[index]
    
    def get_discount_factor(self, index):
        return self.discount_factors[index]

    def compute_spot_rates(self): #Since bills have no coupon payment, spot rate is equal to ytm
        for bond in self.bonds:
            if bond.get_name() == "1m":
                self.spot_rates[0] = bond.compute_ytm()
            elif bond.get_name() == "2m":
                self.spot_rates[1] = bond.compute_ytm()
            elif bond.get_name() == "3m":
                self.spot_rates[2] = bond.compute_ytm()
                self.forward_6m_rates[2]=((1.0 + 9.9893 / 100.0 / 1.333) /
                                            (1.0 + 5.3638 / 100.0 / 3) - 1.0) * 100.0
                self.forward_3m_rates[2] = ((1.0 + 6.9382 / 100.0 / 2) /
                                            (1.0 + 5.3638 / 100.0 / 4) - 1.0) * 100.0
            elif bond.get_name() == "4m":
                self.spot_rates[3] = bond.compute_ytm()
            elif bond.get_name() == "5m":
                self.spot_rates[4] = bond.compute_ytm()
            elif bond.get_name() == "6m":
                self.spot_rates[5] = bond.compute_ytm()
            elif bond.get_name() == "7m":
                self.spot_rates[6] = bond.compute_ytm()
            elif bond.get_name() == "8m":
                self.spot_rates[7] = bond.compute_ytm()
            elif bond.get_name() == "9m":
                self.spot_rates[8] = bond.compute_ytm()
            

    def compute_discount_factors(self):
        """ Compute discount factors from spot rates assuming compounding frequency is twice per year.
        """
        for i in range(len(self.spot_rates)):
            self.discount_factors[i] = 1.0 / math.pow(1.0 + (self.spot_rates[i] / 100.0 / 2.0), (i + 1))

    def compute_forward_1m_rates(self):
        for i in range(len(self.spot_rates) - 1):
            self.forward_1m_rates[i] = ((1.0 + self.spot_rates[i + 1] / 100.0 / Cfre[i+1]) /
                                        (1.0 + self.spot_rates[i] / 100.0 / Cfre[1]) - 1.0) * 100.0

